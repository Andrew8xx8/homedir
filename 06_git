if [[ -x `which git` ]]; then
	function git-branch-name () {
		git branch 2> /dev/null | grep '^\*' | sed 's/^\*\ //'
	}
	function git-dirty () {
		gstatus=$(git status 2> /dev/null)
		dirty=$(echo $gstatus | sed 's/^#.*$//' | tail -2 | grep 'nothing to commit (working directory clean)'; echo $?)
        if [[ $dirty = 1 ]]; then
            echo "1"
        fi
    }
    function git-need-to-push() {
        dirty=$(git-dirty)
        if [[ x$dirty = x ]]; then 
            branch=$(git-branch-name)
            if [[ x$branch != x ]]; then
                need_push=$(git checkout $branch 2>/dev/null | grep 'Your branch is ahead' 2> /dev/null)
                if [[ x$need_push != x ]]; then
                    echo " ^"
                fi
            fi
        fi
    }
	function git-prompt() {
		branch=$(git-branch-name)
        if [[ x$branch != x ]]; then
            color=$fg[cyan]
            push_status=""
            dirty=$(git-dirty)
            if [[ x$dirty = x ]]; then
                push_status=$(git-need-to-push)
            else
                color=$fg[magenta]
            fi
            echo " %{$color%}$branch$push_status%{$reset_color%} "
        fi
	}
	function git-scoreboard () {
		git log | grep Author | sort | uniq -ci | sort -r
	}
	function git-track () {
		branch=$(git-branch-name)
		git config branch.$branch.remote origin
		git config branch.$branch.merge refs/heads/$branch
		echo "tracking origin/$tracking"
	}
	function github-init () {
		git config branch.$(git-branch-name).remote origin
		git config branch.$(git-branch-name).merge refs/heads/$(git-branch-name)
	}
	
fi
